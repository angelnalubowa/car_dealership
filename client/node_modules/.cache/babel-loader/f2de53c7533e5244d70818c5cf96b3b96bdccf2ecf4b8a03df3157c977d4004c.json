{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rosette\\\\Downloads\\\\CarDealershipManagementSystem2\\\\client\\\\src\\\\pages\\\\ListingContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from \"react\";\n\n// Create context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListingsContext = /*#__PURE__*/createContext();\n\n// Custom hook to use the context\nexport const useListings = () => {\n  _s();\n  return useContext(ListingsContext);\n};\n\n// ListingsProvider component\n_s(useListings, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const ListingsProvider = ({\n  children\n}) => {\n  _s2();\n  const [listings, setListings] = useState({\n    cars: [],\n    carSales: [],\n    trips: [],\n    accessories: []\n  });\n\n  // Function to refresh listings data\n  const refreshListings = async () => {\n    try {\n      const [cars, carSales, trips, accessories] = await Promise.all([fetch(\"/cars\").then(res => res.json()), fetch(\"/car-sales\").then(res => res.json()), fetch(\"/trips\").then(res => res.json()), fetch(\"/accessories\").then(res => res.json())]);\n      setListings({\n        cars,\n        carSales,\n        trips,\n        accessories\n      });\n    } catch (error) {\n      console.error(\"Error fetching listings:\", error);\n    }\n  };\n  const updateListings = (category, newItem) => {\n    setListings(prevListings => ({\n      ...prevListings,\n      [category]: [...prevListings[category], newItem]\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(ListingsContext.Provider, {\n    value: {\n      listings,\n      refreshListings,\n      setListings,\n      updateListings\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s2(ListingsProvider, \"ocSVh0qyJSO190GS6EfrYP8oc8w=\");\n_c = ListingsProvider;\nvar _c;\n$RefreshReg$(_c, \"ListingsProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","ListingsContext","useListings","_s","ListingsProvider","children","_s2","listings","setListings","cars","carSales","trips","accessories","refreshListings","Promise","all","fetch","then","res","json","error","console","updateListings","category","newItem","prevListings","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Rosette/Downloads/CarDealershipManagementSystem2/client/src/pages/ListingContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\r\n\r\n// Create context\r\nconst ListingsContext = createContext();\r\n\r\n// Custom hook to use the context\r\nexport const useListings = () => useContext(ListingsContext);\r\n\r\n// ListingsProvider component\r\nexport const ListingsProvider = ({ children }) => {\r\n  const [listings, setListings] = useState({\r\n    cars: [],\r\n    carSales: [],\r\n    trips: [],\r\n    accessories: [],\r\n  });\r\n\r\n  // Function to refresh listings data\r\n  const refreshListings = async () => {\r\n    try {\r\n      const [cars, carSales, trips, accessories] = await Promise.all([\r\n        fetch(\"/cars\").then((res) => res.json()),\r\n        fetch(\"/car-sales\").then((res) => res.json()),\r\n        fetch(\"/trips\").then((res) => res.json()),\r\n        fetch(\"/accessories\").then((res) => res.json()),\r\n      ]);\r\n      setListings({ cars, carSales, trips, accessories });\r\n    } catch (error) {\r\n      console.error(\"Error fetching listings:\", error);\r\n    }\r\n  };\r\n\r\n  const updateListings = (category, newItem) => {\r\n    setListings((prevListings) => ({\r\n      ...prevListings,\r\n      [category]: [...prevListings[category], newItem],\r\n    }));\r\n  };\r\n\r\n\r\n  return (\r\n    <ListingsContext.Provider value={{ listings, refreshListings, setListings, updateListings }}>\r\n      {children}\r\n    </ListingsContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;;AAElE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,eAAe,gBAAGL,aAAa,CAAC,CAAC;;AAEvC;AACA,OAAO,MAAMM,WAAW,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMN,UAAU,CAACI,eAAe,CAAC;AAAA;;AAE5D;AAAAE,EAAA,CAFaD,WAAW;AAGxB,OAAO,MAAME,gBAAgB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAChD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC;IACvCW,IAAI,EAAE,EAAE;IACRC,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,WAAW,EAAE;EACf,CAAC,CAAC;;EAEF;EACA,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF,MAAM,CAACJ,IAAI,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,WAAW,CAAC,GAAG,MAAME,OAAO,CAACC,GAAG,CAAC,CAC7DC,KAAK,CAAC,OAAO,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,EACxCH,KAAK,CAAC,YAAY,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,EAC7CH,KAAK,CAAC,QAAQ,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,EACzCH,KAAK,CAAC,cAAc,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CAChD,CAAC;MACFX,WAAW,CAAC;QAAEC,IAAI;QAAEC,QAAQ;QAAEC,KAAK;QAAEC;MAAY,CAAC,CAAC;IACrD,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;EAED,MAAME,cAAc,GAAGA,CAACC,QAAQ,EAAEC,OAAO,KAAK;IAC5ChB,WAAW,CAAEiB,YAAY,KAAM;MAC7B,GAAGA,YAAY;MACf,CAACF,QAAQ,GAAG,CAAC,GAAGE,YAAY,CAACF,QAAQ,CAAC,EAAEC,OAAO;IACjD,CAAC,CAAC,CAAC;EACL,CAAC;EAGD,oBACExB,OAAA,CAACC,eAAe,CAACyB,QAAQ;IAACC,KAAK,EAAE;MAAEpB,QAAQ;MAAEM,eAAe;MAAEL,WAAW;MAAEc;IAAe,CAAE;IAAAjB,QAAA,EACzFA;EAAQ;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B,CAAC;AAACzB,GAAA,CApCWF,gBAAgB;AAAA4B,EAAA,GAAhB5B,gBAAgB;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}